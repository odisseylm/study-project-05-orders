<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.mvv.scala</groupId>
  <artifactId>scala-map-struct-support</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>${project.artifactId}</name>
  <description>Helpers fro map-struct usage from scala</description>

  <licenses>
    <license>
      <name>My License TODO: add LGPL or Apache lecense  </name>
      <url>https://....</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <!-- TODO: try to minimize java version -->
    <java.version>17</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <encoding>UTF-8</encoding>

    <!-- TODO: try to minimize scala3 version -->
    <scala.version>3.2.2</scala.version>
    <!--<scala-sbt.version>2.0.0-alpha7</scala-sbt.version>-->

    <scala.compat.version>3</scala.compat.version>

    <mapstruct.version>1.5.3.Final</mapstruct.version>

    <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala3-library_3</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala3-tasty-inspector_3</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala3-compiler_3</artifactId>
      <version>${scala.version}</version>
      <optional>true</optional>
    </dependency>
    <!--
    <dependency>
      <groupId>org.scala-sbt</groupId>
      <artifactId>compiler-interface</artifactId>
      <version>${scala-sbt.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.scala-sbt</groupId>
      <artifactId>${zinc.artifactId}</artifactId>
      <version>${scala-sbt.version}</version>
      <optional>true</optional>
    </dependency>
    -->
    <!-- Maven does not allow to exclude dependency, for that reason we use our non-existent version. -->
    <!--
    <dependency>
      <groupId>org.scala-sbt</groupId>
      <artifactId>zinc_2.13</artifactId>
      <version>${zinc_2.13.version}</version>
      <optional>true</optional>
    </dependency>
    -->

    <!--<dependency>-->
    <!--  <groupId>org.scala-lang</groupId>-->
    <!--  <artifactId>scala-reflect</artifactId>-->
    <!--  <version>2.13.10</version>-->
    <!--</dependency>-->

    <!--<dependency>-->
    <!--  <groupId>org.scala-lang.modules</groupId>-->
    <!--  <artifactId>scala-asm</artifactId>-->
    <!--  <version>9.4.0-scala-1</version>-->
    <!--</dependency>-->
    <!--<dependency>-->
    <!--  <groupId>org.scala-lang</groupId>-->
    <!--  <artifactId>scalap</artifactId>-->
    <!--  <version>2.13.10</version>-->
    <!--</dependency>-->

    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
      <version>${mapstruct.version}</version>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.19.0</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.36</version>
      <scope>provided</scope>
    </dependency>

    <!-- ************************************************************************* -->
    <!--                                 Test                                      -->
    <!-- ************************************************************************* -->
    <dependency>
      <groupId>com.mvv.scala.test</groupId>
      <artifactId>scala3-samples</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang.modules</groupId>
      <artifactId>scala-xml_3</artifactId>
      <version>2.1.0</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.9.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.24.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>4.11.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- without vulnerability -->
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>1.15.3</version>
      </dependency>
      <dependency>
        <!-- without vulnerability -->
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>3.21.12</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <!--<sourceDirectory>src/main/scala</sourceDirectory>-->
    <!--<testSourceDirectory>src/test/scala</testSourceDirectory>-->

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/java</source>
                <source>src/main/scala</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/test/java</source>
                <source>src/test/scala</source>
                <!-- Add this if you use maven-compiler-plugin for generating/compiling MapStruct classes. -->
                <!--<source>target/generated-sources/annotations</source>-->
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- see http://davidb.github.com/scala-maven-plugin -->
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>4.8.0</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <!--<addJavacArgs></addJavacArgs>-->
              <!--<addScalacArgs></addScalacArgs>-->
              <!--<additionalDependencies></additionalDependencies>-->
              <fork>false</fork>
              <!--<javacArgs></javacArgs>-->
              <jvmArgs>
                <!--<arg>-Xdebug</arg><arg>-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8003</arg>-->
              </jvmArgs>
              <args>
                <arg>-Yexplicit-nulls</arg>
                <!--<arg>-Ysafe-init</arg>-->
                <arg>-source</arg><arg>future</arg>
                <arg>-feature</arg>
                <arg>-deprecation</arg>
                <!-- Uncomment it for detailed macros stack-trace -->
                <arg>-Ydebug</arg>

                <!--<arg>-Ymacro</arg>-->
                <!--<arg>-Yissue</arg>-->
                <!--<arg>-explaintypes</arg>-->
                <!--<arg>khfdhdffhkj</arg>-->

                <!--<arg>-Xdebug</arg>-->
                <!--<arg>-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8003</arg>-->

                <!-- Seems ignored/unsupported :-( -->
                <!--<arg>-Yjava-null</arg>-->
                <!--<arg>-Yflow-typing</arg>-->
                <!--<arg>-Yjava-interop-checker-framework</arg>-->
                <!--<arg>-Yjava-interop-optimistic</arg>-->

                <!--<arg>-dependencyfile</arg>-->
                <!--<arg>${project.build.directory}/.scala_dependencies</arg>-->
              </args>
            </configuration>
          </execution>
          <!--
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>doc</goal>
              <goal>doc-jar</goal>
            </goals>
          </execution>
          <execution>
            <goals>
              <goal>doc</goal>
            </goals>
            <phase>site</phase>
          </execution>
          -->
        </executions>
        <dependencies>
          <!--
          <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala3-compiler_3</artifactId>
            <version>${scala.version}</version>
          </dependency>
          <dependency>
            <groupId>org.scala-sbt</groupId>
            <artifactId>compiler-interface</artifactId>
            <version>${scala-sbt.version}</version>
          </dependency>
          <dependency>
            <groupId>org.scala-sbt</groupId>
            <artifactId>${zinc.artifactId}</artifactId>
            <version>${scala-sbt.version}</version>
          </dependency>
          -->
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>

        <executions>
          <!-- Tricky approach to not call pure java compiler before scala compiler (to avoid compilation errors). -->
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
            <goals><goal>compile</goal></goals>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
            <goals><goal>testCompile</goal></goals>
          </execution>

          <!-- With this approach we can generate and compile MapStruct classes using maven-compiler-plugin. -->
          <!--
          <execution>
            <id>generateMapStructClasses</id>
            <goals><goal>compile</goal></goals>
            <configuration>
              <parameters>true</parameters>
              < ! - - To force generating MapStruct classes for already compiled (by scala) classes. - - >
              <proc>only</proc>

              <annotationProcessorPaths>
                <path>
                  <groupId>org.mapstruct</groupId>
                  <artifactId>mapstruct-processor</artifactId>
                  <version>${mapstruct.version}</version>
                </path>
              </annotationProcessorPaths>

              <showWarnings>true</showWarnings>
              <compilerArgs>
                <arg>-Amapstruct.verbose=true</arg>
              </compilerArgs>
            </configuration>
          </execution>
          <execution>
            <id>javaCompileGenerated</id>
            <goals><goal>compile</goal></goals>
            <configuration>
              <parameters>true</parameters>
              <proc>none</proc>
              <skipMain>true</skipMain>
            </configuration>
          </execution>
          -->
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M7</version>
        <configuration>
          <!-- Tests will be run with scalatest-maven-plugin instead -->
          <!--<skipTests>true</skipTests>-->

          <!--<excludes>-->
          <!--  <exclude>**/*ITTest*</exclude>-->
          <!--  <exclude>**/*ITest*</exclude>-->
          <!--  <exclude>**/*Integration*</exclude>-->
          <!--</excludes>-->

          <!-- !!! You should add your matcher if your tests do not suite default pattern Test*/*Test !!! -->
          <includes>
            <include>**/*Test*</include>
            <include>**/*Spec*</include>
            <include>**/*Suite*</include>
          </includes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
