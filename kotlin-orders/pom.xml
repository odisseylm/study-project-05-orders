<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.mvv.study</groupId>
    <artifactId>study-project-05-orders</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <groupId>com.mvv.bank</groupId>
  <artifactId>kotlin-bank-orders</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>kotlin-orders-dto</module>
  </modules>

  <properties>
    <java.version>17</java.version>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <kotlin.version>1.7.22</kotlin.version>

    <enable.generate-git-properties-file>true</enable.generate-git-properties-file>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk8</artifactId>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib</artifactId>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-common</artifactId>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-reflect</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-kotlin</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>2.14.1</version>
      </dependency>
      <!-- As alternative to jackson -->
      <!--
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
      </dependency>
      -->
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <!--
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/integration/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-resource</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/integration/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>create-temp-directories</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>bsh-property</goal>
            </goals>
            <configuration>
              <source><![CDATA[
              // TODO: fix k8s volume to avoid using host directory
              // temporary solution to avoid later creating this dir by root/docker user
              for (int i=0; i<10; i++) {
                new File(project.getBasedir(), "target/k8s/data/postgres-data-volume-" + i + "/").mkdirs();
              }
              ]]></source>
            </configuration>
          </execution>
          -->
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <parameters>true</parameters>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>

        <configuration>
          <jvmTarget>${java.version}</jvmTarget>

          <compilerPlugins>
            <plugin>jpa</plugin>
            <!--<plugin>all-open</plugin>-->
            <plugin>spring</plugin>
            <!--<plugin>lombok</plugin>-->
            <!--<plugin>kapt</plugin>-->
          </compilerPlugins>

          <nowarn>false</nowarn>  <!-- Disable/enable warnings -->
          <args>
            <arg>-java-parameters</arg>
            <arg>-Xjsr305=strict</arg> <!-- Enable strict mode for JSR-305 annotations -->
            <arg>-Xemit-jvm-type-annotations</arg>
            <arg>-Xjvm-default=all</arg>
            <!--<arg>-Xnullability-annotations=@<package-name>:<report-level></arg>-->
            <!--<arg>-Xnullability-annotations=strict</arg>-->
          </args>
          <jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>
          <myIncremental>${kotlin.compiler.incremental}</myIncremental>
          <pluginOptions>
            <!--
            <option>all-open:annotation=javax.persistence.Entity</option>
            <option>all-open:annotation=javax.persistence.MappedSuperclass</option>
            <option>all-open:annotation=javax.persistence.Embeddable</option>
            -->
          </pluginOptions>
        </configuration>

        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-noarg</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
          </dependency>
          <!--<dependency>-->
          <!--  <groupId>org.jetbrains.kotlin</groupId>-->
          <!--  <artifactId>kotlin-maven-lombok</artifactId>-->
          <!--  <version>${kotlin.version}</version>-->
          <!--</dependency>-->
          <!--<dependency>-->
          <!--  <groupId>org.projectlombok</groupId>-->
          <!--  <artifactId>lombok</artifactId>-->
          <!--  <version>${lombok.version}</version>-->
          <!--</dependency>-->
        </dependencies>

        <executions>
          <!--<execution>-->
          <!--  <id>kapt</id>-->
          <!--  <goals>-->
          <!--    <goal>kapt</goal>-->
          <!--  </goals>-->
          <!--  <configuration>-->
          <!--    &lt;!&ndash;<args>  - -illegal-access=permit</args>&ndash;&gt;-->
          <!--    <sourceDirs>-->
          <!--      <sourceDir>src/main/kotlin</sourceDir>-->
          <!--      <sourceDir>src/main/java</sourceDir>-->
          <!--    </sourceDirs>-->
          <!--    <annotationProcessorPaths>-->
          <!--      &lt;!&ndash; Specify your annotation processors here. &ndash;&gt;-->
          <!--      <annotationProcessorPath>-->
          <!--        <groupId>com.google.dagger</groupId>-->
          <!--        <artifactId>dagger-compiler</artifactId>-->
          <!--        <version>2.40.1</version>-->
          <!--      </annotationProcessorPath>-->
          <!--    </annotationProcessorPaths>-->
          <!--  </configuration>-->
          <!--</execution>-->
          <execution>
            <id>compile</id>
            <phase>process-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>

          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- TODO: enable later -->
      <!--
      <plugin>
        <groupId>com.mvv.bank</groupId>
        <artifactId>generate-certificates-maven-plugin</artifactId>
        <version>${project.parent.version}</version>
        <executions>
          <execution>
            <id>generate-ssl-certificates</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>generate-certificates</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <enabled>${enable.generate-self-signed-certs}</enabled>
          <hosts>${generated-dev-certs-hosts}</hosts>
        </configuration>
      </plugin>
      -->

      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <version>${groovy-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                log.info('Test message: {}', 'Hello, World!')
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <includes>
            <include>**/*Test*</include>
          </includes>
          <excludes>
            <exclude>**/*ITTest*</exclude>
            <exclude>**/*ITest*</exclude>
            <exclude>**/*Integration*</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <include>**/*ITTest*</include>
            <include>**/*ITest*</include>
            <include>**/*Integration*</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
