
ValDef(x, ??? TypeTree[TypeRef(ThisType(TypeRef(NoPrefix,module class lang)),class String)],EmptyTree)

 Inlined(
   EmptyTree, // call =>
   List(),    // bindings =>
   Block(     // expansion =>
     List(
       DefDef(      // ?stats?
         $anonfun,  // SimpleName => $anonfun   =>
         List(      // params  =>
           List(
             ValDef(
               v,             // Names.SimpleName
               Ident(String), // tpt = Ident
                              // {
                              //   name = Names.TypeName(String)
                              //
                              // }
                              // myTpe = TypeRef(TermRef(ThisType(TypeRef(NoPrefix,module class scala)),object Predef),type String)
                              // myTpe
                              //   myDesignator = {Symbols$Symbol} type String
                              //     lastDenot = {SymDenotations$SymDenotation} type String
                              //       name = {Names$TypeName} String
                              //       myPrivateWithin = {Symbols$NoSymbol} val <none>
                              //       myTargetName = {Names$TypeName} String
                              //       toTermName = {Names$SimpleName} String
                EmptyTree
             )
           )
         ),
         TypeTree[
           TypeRef(
             ThisType(
               TypeRef(
                 NoPrefix,
                 module class scala
               )
             ),
             class Unit
           )
         ],
         Assign(
           Select(
             This(
               Ident(
                 TesPropsClass
               )
             ),
             tempStrPropVar1
           ),
           Ident(v)
         )
       )
     ),
     Closure(
       List(),
       Ident($anonfun),
       EmptyTree
     )
   )
 )


???
expansion