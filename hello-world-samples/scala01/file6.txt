PackageDef(
  Ident(tasty),
  List(
    TypeDef(
      AccessVisibilityTestClass,
      Template(
        DefDef(
          <init>,
          List(List()),
          TypeTree[TypeRef(TermRef(ThisType(TypeRef(NoPrefix,module class <root>)),object scala),Unit)],
          EmptyTree
        ),
        List(
          Apply(
            Select(New(TypeTree[TypeRef(TermRef(ThisType(TypeRef(NoPrefix,module class java)),object lang),Object)]),<init>),
            List()
          )
        ),
        ValDef(_,EmptyTree,EmptyTree),
        List(
          ValDef(privateVal,Ident(String),Literal(Constant())),
          ValDef(protectedVal,Ident(String),Literal(Constant())),
          ValDef(publicVal,Ident(String),Literal(Constant())),
          ValDef(privateVar,Ident(String),Literal(Constant())),
          ValDef(protectedVar,Ident(String),Literal(Constant())),
          DefDef(protectedVar_=,List(List(ValDef(x$1,TypeTree[TypeRef(TermRef(TermRef(ThisType(TypeRef(NoPrefix,module class <root>)),object scala),Predef),String)],EmptyTree))),TypeTree[TypeRef(TermRef(ThisType(TypeRef(NoPrefix,module class <root>)),object scala),Unit)],Literal(Constant(()))),
          ValDef(publicVar,Ident(String),Literal(Constant())),
          DefDef(publicVar_=,List(List(ValDef(x$1,TypeTree[TypeRef(TermRef(TermRef(ThisType(TypeRef(NoPrefix,module class <root>)),object scala),Predef),String)],EmptyTree))),TypeTree[TypeRef(TermRef(ThisType(TypeRef(NoPrefix,module class <root>)),object scala),Unit)],Literal(Constant(()))),
          DefDef(privateMethod,List(),Ident(String),Literal(Constant())),
          DefDef(protectedMethod,List(),Ident(String),Literal(Constant())),
          DefDef(publicMethod,List(),Ident(String),Literal(Constant())))))))